const mongoose = require('mongoose')
const express = require('express')
const { serverPort, mongoURL, sessionConfig, mongoStoreConfig, mongoConfig } = require('./config/settings')
const compression = require('compression')
const helmet = require('helmet')
const session = require('express-session')
const MongoStore = require('connect-mongo')(session)
const passport = require('passport')
require('./config/passport')
const { checkAuthentication } = require('./handlers/auth')
const userRoute = require('./routes/userRoute')

mongoose.connect(mongoURL, mongoConfig).then(_ => { console.log('mongoDB is running') }).catch(err => { console.log(err.message) })

const app = express()
app.use(compression())
app.use(helmet())
app.use(express.json())
app.use(express.urlencoded({ extended: false }))
app.use(session({ ...sessionConfig, store: new MongoStore(mongoStoreConfig) }))
app.use(passport.initialize())
app.use(passport.session())
app.use(checkAuthentication)
app.use('/user', userRoute)

app.listen(serverPort, _ => { console.log('server is running') })